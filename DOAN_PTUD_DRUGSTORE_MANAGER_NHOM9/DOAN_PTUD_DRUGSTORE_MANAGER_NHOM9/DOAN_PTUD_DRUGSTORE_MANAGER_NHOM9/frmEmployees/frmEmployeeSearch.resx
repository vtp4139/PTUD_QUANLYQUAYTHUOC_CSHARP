<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAB3RJ
        TUUH4woQECUqacM28wAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAQfSURBVFhH
        vZdpqBZVGIBvauZWppmgVppL/bDIKClaiBajhUjIigylEAqiBSEpiCxcIFqgoqJFKtvoh0al/ShbMAiC
        RIwsghYrTcuKNs3M6vg857wDjne63jukDzzMzH3fc843M2fOeW9HG1JKB+C5+CC+g5/g5ji+jQ/gFOwb
        Tf4f6HAg3oY/4+5sjeOu/IS34oDooj10ch5uQtmOS3AmHon9Iqc/jsWr8CX8C+VbPCd31AYaz8a/8V98
        FsdgbzwF78Sn8ZU4zsWTsReOwxfQdjvwhuiy+9BoDso2vBLt+FL8Arvia7wG++BlWL2im6LrPUPyheid
        b8HJeAg6ycS7egOvxzPwuDjeiG+icVmBQ/Ek9Ef4JKbEEP8NSYPxR7SjS/BQ/AxlFZ4YqY0Qd8DVJsOn
        6I+/HO3vOxwUqc2QsADlcdwfV+arlJZi/0jrEvIG4Ms2grfQ1/FUvkrpjkjrDMGD0Mf+Bx6GPmZ5H/OM
        7y7k+2X4xMQ5MRr/xN9wYKTVITANxV/bD/38/sFjIqVH0G5StF+PffE5lIsjpQ6BxSWe3/355TQtjXAr
        aP9q6SadjVeU07QownUIrCnxPHHuL6dpRoRbQftZpZt0N44op+mDCNch8D1ui/Pqlx+bgy2h/Qmlm7yC
        7oeukhsiXIeA3/76OH8PZWQOtoT2R5Ru0sq4dl5tz8HdIfArbonz5SgTc7AltD++dJP3CJ+AX8KmCNch
        UC04fo6PlNM0LcKtoP300k3eqoeV07Q6wnUIvFji6QL0S5DFEW4F7d2U5CKcWk7T8xGuQ+C6Ek8P44H4
        C/rIRkdKj6Cdu6KTzvrA1dHVVaZHSh0Cfn4OaOHhRnI7ivOhV6R1C/Ldtl+3MdyCPn5XQWuKIZHWGYLV
        mn0XDsKP81V5h936EebhQzaCD9Fl+b58RT+R1gwJo/B39NG5zY5Hd0dxbRgVqY0QPxxfMxmsF62cTkPv
        3H6HR2ozJLhpbEBxYbIKmoAWnuJG9ShaMziYT8mjk8x3bAEjH6FzwFLtB/8AM2OYZkhw8C9zakrfxNGF
        41R0Us5H76IrfM+Wa/6w09GbkHtjmGZI8E7X5dSya7kbfp6vyuObh64PQ9ASzTrwXVwbR+eOm83B4UKs
        ilP3ld4xVGcI+p6+MhMsPi0gfMzi4/Oxi3PhHjwT+0TzDNcWL2ehk83PTizFro6UZkjYdfBn0MEfy1el
        rD4afTUuKNZ1Fe7zG9GvpKobKsyzj673ERKcIFaxYi3g4NVi4eBHRWqGa7fTm3EZOmhVgLp2eBP+/Vrc
        8wZGku+8mmi+Twd/Il+Vr6A2eBPkuLkMjsueQUPLZnHyOPiifFXKpwmRtvdgED8nJ4mz/UkUBx8fKXsX
        BvKfCKlmuK9j3wwuDObM9jVYhrtpjInQPqCjYye3CN5j8f6gDwAAAABJRU5ErkJggg==
</value>
  </data>
</root>